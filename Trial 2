import processing.io.*;

/**
 * oscP5sendreceive by andreas schlegel
 * example shows how to send and receive osc messages.
 * oscP5 website at http://www.sojamo.de/oscP5
 */
 
import oscP5.*;
import netP5.*;
  
OscP5 oscP5;

import processing.video.*;
Movie myMovie;

void setup(){
  size(500,500);
  myMovie = new Movie (this, "Adnans animation.mp4");
}

//PImage img1;
//Movie video;

//void setup(){
  //movie = new Capture(this, 320, 240);
   
   //import video
}


boolean click = false;

float distance;

void setup(){
  size(1024,663);
  img1 = loadImage("sausage2.png");

  background(72,188,222);
  
    /* start oscP5, listening for incoming messages at port 9000 */
  oscP5 = new OscP5(this,9000);
  
}

void draw(){
  image(img5,0,0); //background
 
  if(distance > 5.0){ //Bun
   
  }else{
   
    
  
  if(distance > 7.0){
  
  }else{
    
  }

  if(distance > 9.0){
    
  }else{
    
  }
  
  if(distance > 11.0){
   
  }else{
    
  }
  
  if(distance > 13.0){ //Sausage
    
  }else{
    
  }
  
  if(distance > 15.0){ //sausage
    
  }else{
    
  }
    
  if(distance > 17.0){ //sausage
    
  }else{
  
  } 
 
  if(distance > 19.0){ //ketchup
    image(img4,420,70);
  } 
}
void mousePressed(){
  if(click){
    click = false;
    }else{
      click = true;
    }
}


/* incoming osc message are forwarded to the oscEvent method. */
void oscEvent(OscMessage theOscMessage) {
  /* print the address pattern and the typetag of the received OscMessage */
  print("### received an osc message.");
  print(" addrpattern: "+theOscMessage.addrPattern());
  println(" typetag: "+theOscMessage.typetag());
  println(" value: "+theOscMessage.get(0).floatValue());
  distance = theOscMessage.get(0).floatValue();}
 
}
